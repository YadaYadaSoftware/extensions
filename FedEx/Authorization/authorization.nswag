{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n\t\"openapi\": \"3.0.0\",\r\n\t\"info\": {\r\n\t\t\"title\": \"API Authorization\",\r\n\t\t\"version\": \"1.0\"\r\n\t},\r\n\t\"servers\": [\r\n\t\t{\r\n\t\t\t\"url\": \"https://apis-sandbox.fedex.com\",\r\n\t\t\t\"description\": \"Sandbox Server\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"url\": \"https://apis.fedex.com\",\r\n\t\t\t\"description\": \"Production Server\"\r\n\t\t}\r\n\t],\r\n\t\"paths\": {\r\n\t\t\"/oauth/token\": {\r\n\t\t\t\"post\": {\r\n\t\t\t\t\"summary\": \"API Authorization\",\r\n\t\t\t\t\"description\": \"Use this endpoint to request the OAuth token (bearer token) to authorize your application to access FedEx resources. You can pass this bearer token in your subsequent individual FedEx API endpoint requests.\",\r\n\t\t\t\t\"operationId\": \"API Authorization\",\r\n\t\t\t\t\"parameters\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"name\": \"content-type\",\r\n\t\t\t\t\t\t\"in\": \"header\",\r\n\t\t\t\t\t\t\"description\": \"This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.<br> Example: application/x-www-form-urlencoded\",\r\n\t\t\t\t\t\t\"required\": true,\r\n\t\t\t\t\t\t\"style\": \"simple\",\r\n\t\t\t\t\t\t\"explode\": false,\r\n\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\"example\": \"application/x-www-form-urlencoded\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"requestBody\": {\r\n\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\"application/x-www-form-urlencoded\": {\r\n\t\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/FullSchema\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"examples\": {\r\n\t\t\t\t\t\t\t\t\"Compatible\": {\r\n\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\"grant_type\": \"csp_credentials\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_id\": \"Client_ID\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_secret\": \"Client_secret\",\r\n\t\t\t\t\t\t\t\t\t\t\"child_Key\": \"Child_key\",\r\n\t\t\t\t\t\t\t\t\t\t\"child_secret\": \"Child_Secret\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"B2B-Proprietary-PC\": {\r\n\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\"grant_type\": \"b2b_proprietary\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_id\": \"Client_ID\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_secret\": \"Client_secret\",\r\n\t\t\t\t\t\t\t\t\t\t\"child_Key\": \"Child_key\",\r\n\t\t\t\t\t\t\t\t\t\t\"child_secret\": \"Child_Secret\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"B2B-Proprietary\": {\r\n\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\"grant_type\": \"client_credentials\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_id\": \"Your_client_ID\",\r\n\t\t\t\t\t\t\t\t\t\t\"client_secret\": \"Your_secret\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"required\": true\r\n\t\t\t\t},\r\n\t\t\t\t\"responses\": {\r\n\t\t\t\t\t\"200\": {\r\n\t\t\t\t\t\t\"description\": \"Success\",\r\n\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\"application/json\": {\r\n\t\t\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/Response\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"401\": {\r\n\t\t\t\t\t\t\"description\": \"Unauthorized\",\r\n\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\"application/json\": {\r\n\t\t\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/ErrorResponseVO\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"example\": {\r\n\t\t\t\t\t\t\t\t\t\"transactionId\": \"624deea6-b709-470c-8c39-4b5511281492\",\r\n\t\t\t\t\t\t\t\t\t\"errors\": [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"code\": \"NOT.AUTHORIZED.ERROR\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"message\": \"The given client credentials were not valid. Please modify your request and try again.\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"500\": {\r\n\t\t\t\t\t\t\"description\": \"Failure\",\r\n\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\"application/json\": {\r\n\t\t\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/ErrorResponseVO\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"example\": {\r\n\t\t\t\t\t\t\t\t\t\"transactionId\": \"624deea6-b709-470c-8c39-4b5511281492\",\r\n\t\t\t\t\t\t\t\t\t\"errors\": [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"code\": \"INTERNAL.SERVER.ERROR\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"message\": \"We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time.\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"503\": {\r\n\t\t\t\t\t\t\"description\": \"Service Unavailable\",\r\n\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\"application/json\": {\r\n\t\t\t\t\t\t\t\t\"schema\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/ErrorResponseVO\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"example\": {\r\n\t\t\t\t\t\t\t\t\t\"transactionId\": \"624deea6-b709-470c-8c39-4b5511281492\",\r\n\t\t\t\t\t\t\t\t\t\"errors\": [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"code\": \"SERVICE.UNAVAILABLE.ERROR\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"message\": \"The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time.\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"x-code-samples\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"C#\",\r\n\t\t\t\t\t\t\"source\": \"var client = new RestClient(\\\"https://apis-sandbox.fedex.com/oauth/token\\\");\\nvar request = new RestRequest(Method.POST);\\nrequest.AddHeader(\\\"Content-Type\\\", \\\"application/x-www-form-urlencoded\\\");\\n// 'input' refers to JSON Payload\\nrequest.AddParameter(\\\"undefined\\\", input, ParameterType.RequestBody);\\nIRestResponse response = client.Execute(request);\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"JAVA\",\r\n\t\t\t\t\t\t\"source\": \"OkHttpClient client = new OkHttpClient();\\n\\nMediaType mediaType = MediaType.parse(\\\"application/json\\\");\\n// 'input' refers to JSON Payload\\nRequestBody body = RequestBody.create(mediaType, input);\\nRequest request = new Request.Builder()\\n    .url(\\\"https://apis-sandbox.fedex.com/oauth/token\\\")\\n    .post(body)\\n    .addHeader(\\\"Content-Type\\\", \\\"application/x-www-form-urlencoded\\\")\\n    .build();\\n            \\nResponse response = client.newCall(request).execute();\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"JAVASCRIPT\",\r\n\t\t\t\t\t\t\"source\": \"// 'input' refers to JSON Payload\\nvar data = JSON.stringify(input);\\n  \\n  var xhr = new XMLHttpRequest();\\n  xhr.withCredentials = true;\\n  \\n  xhr.addEventListener(\\\"readystatechange\\\", function () {\\n    if (this.readyState === 4) {\\n      console.log(this.responseText);\\n    }\\n  });\\n  \\n  xhr.open(\\\"POST\\\", \\\"https://apis-sandbox.fedex.com/oauth/token\\\");\\n  xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/x-www-form-urlencoded\\\");\\n  xhr.send(data);\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"PHP\",\r\n\t\t\t\t\t\t\"source\": \"<?php\\n\\n$request = new HttpRequest();\\n$request->setUrl('https://apis-sandbox.fedex.com/oauth/token');\\n$request->setMethod(HTTP_METH_POST);\\n\\n$request->setHeaders(array(\\n  'Content-Type' => 'application/x-www-form-urlencoded'\\n));\\n\\n$request->setBody(input); // 'input' refers to JSON Payload\\n\\ntry {\\n  $response = $request->send();\\n\\n  echo $response->getBody();\\n} catch (HttpException $ex) {\\n  echo $ex;\\n}\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"PYTHON\",\r\n\t\t\t\t\t\t\"source\": \"import requests\\n\\nurl = \\\"https://apis-sandbox.fedex.com/oauth/token\\\"\\n\\npayload = input # 'input' refers to JSON Payload\\nheaders = {\\n    'Content-Type': \\\"application/x-www-form-urlencoded\\\"\\n    }\\n\\nresponse = requests.request(\\\"POST\\\", url, data=payload, headers=headers)\\n\\nprint(response.text)\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"RUST\",\r\n\t\t\t\t\t\t\"source\": \"extern crate reqwest;\\n\\nuse std::io::Read;\\n\\nfn construct_headers() -> HeaderMap {\\n    let mut headers = HeaderMap::new();\\n    headers.insert(\\\"Content-Type\\\", \\\"application/x-www-form-urlencoded\\\");\\n   \\n    headers\\n}\\n\\nfn run() -> Result<()> {\\n    let client = reqwest::Client::new();\\n    let mut res = client.post(\\\"https://apis-sandbox.fedex.com/oauth/token\\\")\\n        .body(input) // 'input' refers to JSON Payload\\n        .headers(construct_headers())\\n        .send()?;\\n    let mut body = String::new();\\n    res.read_to_string(&mut body)?;\\n\\n    println!(\\\"Status: {}\\\", res.status());\\n    println!(\\\"Headers:\\\\n{:#?}\\\", res.headers());\\n    println!(\\\"Body:\\\\n{}\\\", body);\\n\\n    Ok(())\\n}\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"lang\": \"SWIFT\",\r\n\t\t\t\t\t\t\"source\": \"import Foundation\\n\\nlet headers = [\\n  \\\"Content-Type\\\": \\\"application/x-www-form-urlencoded\\\"\\n]\\nlet parameters = [\\n  input // 'input' refers to JSON Payload\\n] as [String : Any]\\n\\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\\n\\nlet request = NSMutableURLRequest(url: NSURL(string: \\\"https://apis-sandbox.fedex.com/oauth/token\\\")! as URL,\\n                                        cachePolicy: .useProtocolCachePolicy,\\n                                    timeoutInterval: 10.0)\\nrequest.httpMethod = \\\"POST\\\"\\nrequest.allHTTPHeaderFields = headers\\nrequest.httpBody = postData as Data\\n\\nlet session = URLSession.shared\\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\\n  if (error != nil) {\\n    print(error)\\n  } else {\\n    let httpResponse = response as? HTTPURLResponse\\n    print(httpResponse)\\n  }\\n})\\n\\ndataTask.resume()\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"components\": {\r\n\t\t\"schemas\": {\r\n\t\t\t\"FullSchema\": {\r\n\t\t\t\t\"required\": [\r\n\t\t\t\t\t\"client_id\",\r\n\t\t\t\t\t\"client_secret\",\r\n\t\t\t\t\t\"grant_type\"\r\n\t\t\t\t],\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"grant_type\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Specify the type of customer requesting the Oauth token.<br>Valid Values: client_credentials, csp_credentials<br>Note:<br>client_credentials - should be used for customers.<br>csp_credentials - should be used for Compatible Provider customers.\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"client_id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Specify the Client ID also known as API Key received during FedEx Developer portal registration.<br>Example: XXXX-XXX-XXXX-XXX\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"client_secret\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Specify the Client secret also known as Secret Key received during FedEx Developer portal registration.<br>Example: XXXX-XXX-XXXX-XXX\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"child_Key\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Specify the Client ID also known as Customer Key. This element is used as a login credential for a Compatible Customer to access the application on behalf of their customer.<br>Example: XXXX-XXX-XXXX-XXX<br>Note: This element should only be used by Compatible Customers.\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"child_secret\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Specify the Client secret also known as Customer Secret. This element is used as a login credential for a Compatible Customer to access the application on behalf of their customer.<br>Example: XXXX-XXX-XXXX-XXX<br>Note: This element should only be used by Compatible Customers.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"description\": \"The request elements for OAuth API.\"\r\n\t\t\t},\r\n\t\t\t\"Response\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"access_token\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"This is an encrypted OAuth token used to authenticate your API requests. Use it in the authorization header of your API requests.<br>Example:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX……\",\r\n\t\t\t\t\t\t\"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX……\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"token_type\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"This is a token type. In this case, it is 'bearer authentication'.\",\r\n\t\t\t\t\t\t\"example\": \"bearer\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"expires_in\": {\r\n\t\t\t\t\t\t\"type\": \"integer\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the token expiration time in seconds. The standard token expiration time is one hour. <br>Example: 3600\",\r\n\t\t\t\t\t\t\"example\": 3600\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"scope\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the scope of authorization provided to the consumer.<br> Example: CXS\",\r\n\t\t\t\t\t\t\"example\": \"CXS\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"description\": \"This is the response of OAuth token and having access token details.\"\r\n\t\t\t},\r\n\t\t\t\"ErrorResponseVO\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"transactionId\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"The transaction ID is a special set of numbers that defines each transaction.<br>Example: bc95c0e4-b33e-42a2-80d2-334282b5d37a\",\r\n\t\t\t\t\t\t\"example\": \"bc95c0e4-b33e-42a2-80d2-334282b5d37a\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"errors\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"description\": \"Indicates error details when suspicious files, potential exploits and viruses are found while scanning files, directories and user accounts. This includes code, message and error parameters.\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/CXSError\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"CXSError\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"code\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the error code.<br>Example: NOT.FOUND.ERROR\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"parameterList\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"description\": \"List of parameters which indicates the properties of the alert message.\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"#/components/schemas/Parameter\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"message\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the API error alert message.<br>Example: We are unable to process this request. Please try again later or contact FedEx Customer Service.\",\r\n\t\t\t\t\t\t\"example\": \"We are unable to process this request. Please try again later or contact FedEx Customer Service.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"Parameter\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the error option to be applied.\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"key\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"Indicates the value associated with the key.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "FedEx.Authorization",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "Authorization.cs",
      "newLineBehavior": "Auto"
    }
  }
}